# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


from datetime import datetime, timedelta, timezone
import uuid
from airflow import DAG
from airflow.providers.google.cloud.operators.dataproc import DataprocCreateBatchOperator
from airflow.providers.google.cloud.operators.dataproc import DataprocSubmitJobOperator
from airflow.operators.python_operator import PythonOperator
from google.cloud import dataproc_v1
from google.api_core.client_options import ClientOptions
import os


default_args = {
    'owner': '{{owner}}',
    'start_date': '{{start_date}}', 
    'email': {{email}}, 
    'email_on_failure': '{{email_failure}}',     
    'email_on_retry': '{{email_delay}}',      
    'email_on_success':'{{email_success}}'
}
time_zone = '{{time_zone}}'

dag = DAG(
    '{{job_name}}', 
    default_args=default_args,
    description='{{job_name}}',
    tags =['dataproc_jupyter_plugin'],
    schedule_interval='{{schedule_interval}}',
    catchup= False
)

def get_notebook_args(input_notebook,parameter,task_id):
    input_notebook = input_notebook
    output_notebook = {% raw %}"{{ ti.xcom_pull(task_ids='" + task_id + "',key='output_file_path') }}"{% endraw %}
    notebook_args = [input_notebook, output_notebook]
    parameters_str = '''
    {}
    '''.format(',\n'.join(parameter)).replace('\n', '')
    # Check if parameters is not empty or contains only whitespace
    if parameters_str.strip():  
        notebook_args.extend(["--parameters", parameters_str])
    return notebook_args

